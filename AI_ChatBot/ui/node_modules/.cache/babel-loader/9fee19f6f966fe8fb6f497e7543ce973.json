{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\GitHub\\\\reactAPP\\\\Final_ChatBot\\\\ui\\\\src\\\\ChatbotWindow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\nimport axios from 'axios';\nimport 'react-chat-widget/lib/styles.css';\nimport logo from \"./logo.svg\"; // import Lottie from 'react-lottie';\n// import Animation from './bot.json';\n\nfunction App() {\n  _s();\n\n  useEffect(() => {\n    addResponseMessage('Welcome to this awesome chat!');\n  }, []);\n  const downloadLinkRef = useRef(); //   const defaultOptions = {\n  //     loop: true,\n  //     autoplay: true,\n  //     animationData: Animation,\n  //     isClickToPauseDisabled: true,\n  //     rendererSettings: {\n  //       preserveAspectRatio: 'xMidYMid slice'\n  //     }\n  //   };\n\n  const handleNewUserMessage = newMessage => {\n    console.log(`New message incoming! ${newMessage}`); // Now send the message throught the backend API\n\n    axios({\n      method: \"GET\",\n      url: \"/api?user_req=\" + newMessage,\n      headers: {},\n      responseType: \"blob\"\n    }).then(res => {\n      if (res.headers[\"content-type\"] === \"application/pdf\") {\n        console.log(res.data);\n        let blob = new Blob([res.data]);\n        console.log(blob);\n        let ref = downloadLinkRef;\n        ref.current.href = URL.createObjectURL(blob);\n        console.log(URL.createObjectURL(blob));\n        ref.current.download = newMessage + \".pdf\";\n        ref.current.click();\n        addResponseMessage(\"File Sent\");\n      } else {\n        addResponseMessage(res.data);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Widget, {\n      handleNewUserMessage: handleNewUserMessage,\n      profileAvatar: logo,\n      title: \"ChatBot\",\n      subtitle: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      style: {\n        display: 'none'\n      },\n      href: \"empty\",\n      ref: downloadLinkRef,\n      children: \"ref\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2aQVyhs2BIuo6qVS5t515LU/LWs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/GitHub/reactAPP/Final_ChatBot/ui/src/ChatbotWindow.js"],"names":["React","useEffect","useRef","Widget","addResponseMessage","axios","App","downloadLinkRef","handleNewUserMessage","newMessage","console","log","method","url","headers","responseType","then","res","data","blob","Blob","ref","current","href","URL","createObjectURL","download","click","logo","display"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,QAAuC,OAAvC;AACA,SAASC,MAAT,EAAiBC,kBAAjB,QAA2C,mBAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,kCAAP;+BAGA;AACA;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACbL,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,kBAAkB,CAAC,+BAAD,CAAlB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMG,eAAe,GAAGL,MAAM,EAA9B,CALa,CAOf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,QAAMM,oBAAoB,GAAIC,UAAD,IAAgB;AAC3CC,IAAAA,OAAO,CAACC,GAAR,CAAa,yBAAwBF,UAAW,EAAhD,EAD2C,CAE3C;;AACAJ,IAAAA,KAAK,CACD;AACEO,MAAAA,MAAM,EAAC,KADT;AAEEC,MAAAA,GAAG,EAAC,mBAAmBJ,UAFzB;AAGEK,MAAAA,OAAO,EAAC,EAHV;AAIEC,MAAAA,YAAY,EAAC;AAJf,KADC,CAAL,CAOIC,IAPJ,CAOUC,GAAG,IAAE;AACT,UAAGA,GAAG,CAACH,OAAJ,CAAY,cAAZ,MAAgC,iBAAnC,EACA;AACEJ,QAAAA,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACC,IAAhB;AACA,YAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACH,GAAG,CAACC,IAAL,CAAT,CAAX;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ;AACA,YAAIE,GAAG,GAAGd,eAAV;AACAc,QAAAA,GAAG,CAACC,OAAJ,CAAYC,IAAZ,GAAmBC,GAAG,CAACC,eAAJ,CAAoBN,IAApB,CAAnB;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAYa,GAAG,CAACC,eAAJ,CAAoBN,IAApB,CAAZ;AACAE,QAAAA,GAAG,CAACC,OAAJ,CAAYI,QAAZ,GAAuBjB,UAAU,GAAG,MAApC;AACAY,QAAAA,GAAG,CAACC,OAAJ,CAAYK,KAAZ;AACAvB,QAAAA,kBAAkB,CAAC,WAAD,CAAlB;AACD,OAXD,MAYI;AACFA,QAAAA,kBAAkB,CAACa,GAAG,CAACC,IAAL,CAAlB;AACD;AACJ,KAvBH;AAyBD,GA5BD;;AA8BA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAKE,QAAC,MAAD;AACE,MAAA,oBAAoB,EAAEV,oBADxB;AAEE,MAAA,aAAa,EAAEoB,IAFjB;AAGI,MAAA,KAAK,EAAC,SAHV;AAII,MAAA,QAAQ,EAAC;AAJb;AAAA;AAAA;AAAA;AAAA,YALF,eAWE;AAAG,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAV;AAA6B,MAAA,IAAI,EAAC,OAAlC;AAA0C,MAAA,GAAG,EAAEtB,eAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA9DQD,G;;KAAAA,G;AAgET,eAAeA,GAAf","sourcesContent":["import React,{ useEffect ,useRef} from 'react';\r\nimport { Widget, addResponseMessage } from 'react-chat-widget';\r\nimport axios from 'axios';\r\nimport 'react-chat-widget/lib/styles.css';\r\nimport logo from './logo.svg';\r\n\r\n// import Lottie from 'react-lottie';\r\n// import Animation from './bot.json';\r\n\r\n\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    addResponseMessage('Welcome to this awesome chat!');\r\n  }, []);\r\n\r\n  const downloadLinkRef = useRef();\r\n\r\n//   const defaultOptions = {\r\n//     loop: true,\r\n//     autoplay: true,\r\n//     animationData: Animation,\r\n//     isClickToPauseDisabled: true,\r\n//     rendererSettings: {\r\n//       preserveAspectRatio: 'xMidYMid slice'\r\n//     }\r\n//   };\r\n\r\n  const handleNewUserMessage = (newMessage) => {\r\n    console.log(`New message incoming! ${newMessage}`);\r\n    // Now send the message throught the backend API\r\n    axios(\r\n        {\r\n          method:\"GET\",\r\n          url:\"/api?user_req=\" + newMessage,\r\n          headers:{},\r\n          responseType:\"blob\"\r\n        }\r\n      ).then( res=>{\r\n          if(res.headers[\"content-type\"] === \"application/pdf\" )\r\n          {\r\n            console.log(res.data);\r\n            let blob = new Blob([res.data]);\r\n            console.log(blob);\r\n            let ref = downloadLinkRef;\r\n            ref.current.href = URL.createObjectURL(blob);\r\n            console.log(URL.createObjectURL(blob));\r\n            ref.current.download = newMessage + \".pdf\";\r\n            ref.current.click();\r\n            addResponseMessage(\"File Sent\");\r\n          }\r\n          else{\r\n            addResponseMessage(res.data);\r\n          }\r\n      });\r\n    \r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        {/* <Lottie options={defaultOptions} isClickToPauseDisabled={true}\r\n              height={1000}\r\n              width={1000}\r\n        /> */}\r\n      <Widget\r\n        handleNewUserMessage={handleNewUserMessage}\r\n        profileAvatar={logo}\r\n          title=\"ChatBot\"\r\n          subtitle=\"\"\r\n      />\r\n      <a style={{display: 'none'}} href='empty' ref={downloadLinkRef}>ref</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}